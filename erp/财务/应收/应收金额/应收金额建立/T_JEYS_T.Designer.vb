'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行库版本:2.0.50727.42
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("T_JEYS_T"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class T_JEYS_T
    Inherits System.Data.DataSet
    
    Private tablet_skys_master As t_skys_masterDataTable
    
    Private tablet_skys_detail As t_skys_detailDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("t_skys_master")) Is Nothing) Then
                MyBase.Tables.Add(New t_skys_masterDataTable(ds.Tables("t_skys_master")))
            End If
            If (Not (ds.Tables("t_skys_detail")) Is Nothing) Then
                MyBase.Tables.Add(New t_skys_detailDataTable(ds.Tables("t_skys_detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t_skys_master() As t_skys_masterDataTable
        Get
            Return Me.tablet_skys_master
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t_skys_detail() As t_skys_detailDataTable
        Get
            Return Me.tablet_skys_detail
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As T_JEYS_T = CType(MyBase.Clone,T_JEYS_T)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("t_skys_master")) Is Nothing) Then
                MyBase.Tables.Add(New t_skys_masterDataTable(ds.Tables("t_skys_master")))
            End If
            If (Not (ds.Tables("t_skys_detail")) Is Nothing) Then
                MyBase.Tables.Add(New t_skys_detailDataTable(ds.Tables("t_skys_detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablet_skys_master = CType(MyBase.Tables("t_skys_master"),t_skys_masterDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet_skys_master) Is Nothing) Then
                Me.tablet_skys_master.InitVars
            End If
        End If
        Me.tablet_skys_detail = CType(MyBase.Tables("t_skys_detail"),t_skys_detailDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet_skys_detail) Is Nothing) Then
                Me.tablet_skys_detail.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "T_JEYS_T"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/T_JEYS_T.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablet_skys_master = New t_skys_masterDataTable
        MyBase.Tables.Add(Me.tablet_skys_master)
        Me.tablet_skys_detail = New t_skys_detailDataTable
        MyBase.Tables.Add(Me.tablet_skys_detail)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet_skys_master() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet_skys_detail() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As T_JEYS_T = New T_JEYS_T
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub t_skys_masterRowChangeEventHandler(ByVal sender As Object, ByVal e As t_skys_masterRowChangeEvent)
    
    Public Delegate Sub t_skys_detailRowChangeEventHandler(ByVal sender As Object, ByVal e As t_skys_detailRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t_skys_masterDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnbillno As System.Data.DataColumn
        
        Private columnmemo As System.Data.DataColumn
        
        Private columncheck_man As System.Data.DataColumn
        
        Private columnprint_date As System.Data.DataColumn
        
        Private columnprint_man As System.Data.DataColumn
        
        Private columninput_man As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t_skys_master"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property billnoColumn() As System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property memoColumn() As System.Data.DataColumn
            Get
                Return Me.columnmemo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property check_manColumn() As System.Data.DataColumn
            Get
                Return Me.columncheck_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property print_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columnprint_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property print_manColumn() As System.Data.DataColumn
            Get
                Return Me.columnprint_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_manColumn() As System.Data.DataColumn
            Get
                Return Me.columninput_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t_skys_masterRow
            Get
                Return CType(Me.Rows(index),t_skys_masterRow)
            End Get
        End Property
        
        Public Event t_skys_masterRowChanging As t_skys_masterRowChangeEventHandler
        
        Public Event t_skys_masterRowChanged As t_skys_masterRowChangeEventHandler
        
        Public Event t_skys_masterRowDeleting As t_skys_masterRowChangeEventHandler
        
        Public Event t_skys_masterRowDeleted As t_skys_masterRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt_skys_masterRow(ByVal row As t_skys_masterRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt_skys_masterRow(ByVal billno As String, ByVal memo As String, ByVal check_man As String, ByVal print_date As Date, ByVal print_man As String, ByVal input_man As String) As t_skys_masterRow
            Dim rowt_skys_masterRow As t_skys_masterRow = CType(Me.NewRow,t_skys_masterRow)
            rowt_skys_masterRow.ItemArray = New Object() {billno, memo, check_man, print_date, print_man, input_man}
            Me.Rows.Add(rowt_skys_masterRow)
            Return rowt_skys_masterRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As t_skys_masterDataTable = CType(MyBase.Clone,t_skys_masterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New t_skys_masterDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnmemo = MyBase.Columns("memo")
            Me.columncheck_man = MyBase.Columns("check_man")
            Me.columnprint_date = MyBase.Columns("print_date")
            Me.columnprint_man = MyBase.Columns("print_man")
            Me.columninput_man = MyBase.Columns("input_man")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnbillno = New System.Data.DataColumn("billno", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnmemo = New System.Data.DataColumn("memo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmemo)
            Me.columncheck_man = New System.Data.DataColumn("check_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncheck_man)
            Me.columnprint_date = New System.Data.DataColumn("print_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprint_date)
            Me.columnprint_man = New System.Data.DataColumn("print_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprint_man)
            Me.columninput_man = New System.Data.DataColumn("input_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_man)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt_skys_masterRow() As t_skys_masterRow
            Return CType(Me.NewRow,t_skys_masterRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New t_skys_masterRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(t_skys_masterRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t_skys_masterRowChangedEvent) Is Nothing) Then
                RaiseEvent t_skys_masterRowChanged(Me, New t_skys_masterRowChangeEvent(CType(e.Row,t_skys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t_skys_masterRowChangingEvent) Is Nothing) Then
                RaiseEvent t_skys_masterRowChanging(Me, New t_skys_masterRowChangeEvent(CType(e.Row,t_skys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t_skys_masterRowDeletedEvent) Is Nothing) Then
                RaiseEvent t_skys_masterRowDeleted(Me, New t_skys_masterRowChangeEvent(CType(e.Row,t_skys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t_skys_masterRowDeletingEvent) Is Nothing) Then
                RaiseEvent t_skys_masterRowDeleting(Me, New t_skys_masterRowChangeEvent(CType(e.Row,t_skys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet_skys_masterRow(ByVal row As t_skys_masterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As T_JEYS_T = New T_JEYS_T
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t_skys_masterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t_skys_detailDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnproject_no As System.Data.DataColumn
        
        Private columnproject_name As System.Data.DataColumn
        
        Private columnproject_money As System.Data.DataColumn
        
        Private columnmoney As System.Data.DataColumn
        
        Private columnmemo As System.Data.DataColumn
        
        Private columneffective_date As System.Data.DataColumn
        
        Private columnbillno As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t_skys_detail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_noColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_no
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_nameColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_name
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_money
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnmoney
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property memoColumn() As System.Data.DataColumn
            Get
                Return Me.columnmemo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property effective_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columneffective_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property billnoColumn() As System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t_skys_detailRow
            Get
                Return CType(Me.Rows(index),t_skys_detailRow)
            End Get
        End Property
        
        Public Event t_skys_detailRowChanging As t_skys_detailRowChangeEventHandler
        
        Public Event t_skys_detailRowChanged As t_skys_detailRowChangeEventHandler
        
        Public Event t_skys_detailRowDeleting As t_skys_detailRowChangeEventHandler
        
        Public Event t_skys_detailRowDeleted As t_skys_detailRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt_skys_detailRow(ByVal row As t_skys_detailRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt_skys_detailRow(ByVal project_no As String, ByVal project_name As String, ByVal project_money As Decimal, ByVal money As Decimal, ByVal memo As String, ByVal effective_date As Date, ByVal billno As String) As t_skys_detailRow
            Dim rowt_skys_detailRow As t_skys_detailRow = CType(Me.NewRow,t_skys_detailRow)
            rowt_skys_detailRow.ItemArray = New Object() {project_no, project_name, project_money, money, memo, effective_date, billno}
            Me.Rows.Add(rowt_skys_detailRow)
            Return rowt_skys_detailRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As t_skys_detailDataTable = CType(MyBase.Clone,t_skys_detailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New t_skys_detailDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproject_no = MyBase.Columns("project_no")
            Me.columnproject_name = MyBase.Columns("project_name")
            Me.columnproject_money = MyBase.Columns("project_money")
            Me.columnmoney = MyBase.Columns("money")
            Me.columnmemo = MyBase.Columns("memo")
            Me.columneffective_date = MyBase.Columns("effective_date")
            Me.columnbillno = MyBase.Columns("billno")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproject_no = New System.Data.DataColumn("project_no", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_no)
            Me.columnproject_name = New System.Data.DataColumn("project_name", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_name)
            Me.columnproject_money = New System.Data.DataColumn("project_money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_money)
            Me.columnmoney = New System.Data.DataColumn("money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoney)
            Me.columnmemo = New System.Data.DataColumn("memo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmemo)
            Me.columneffective_date = New System.Data.DataColumn("effective_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columneffective_date)
            Me.columnbillno = New System.Data.DataColumn("billno", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt_skys_detailRow() As t_skys_detailRow
            Return CType(Me.NewRow,t_skys_detailRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New t_skys_detailRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(t_skys_detailRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t_skys_detailRowChangedEvent) Is Nothing) Then
                RaiseEvent t_skys_detailRowChanged(Me, New t_skys_detailRowChangeEvent(CType(e.Row,t_skys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t_skys_detailRowChangingEvent) Is Nothing) Then
                RaiseEvent t_skys_detailRowChanging(Me, New t_skys_detailRowChangeEvent(CType(e.Row,t_skys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t_skys_detailRowDeletedEvent) Is Nothing) Then
                RaiseEvent t_skys_detailRowDeleted(Me, New t_skys_detailRowChangeEvent(CType(e.Row,t_skys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t_skys_detailRowDeletingEvent) Is Nothing) Then
                RaiseEvent t_skys_detailRowDeleting(Me, New t_skys_detailRowChangeEvent(CType(e.Row,t_skys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet_skys_detailRow(ByVal row As t_skys_detailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As T_JEYS_T = New T_JEYS_T
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t_skys_detailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t_skys_masterRow
        Inherits System.Data.DataRow
        
        Private tablet_skys_master As t_skys_masterDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet_skys_master = CType(Me.Table,t_skys_masterDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.billnoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““billno””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.billnoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property memo() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.memoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““memo””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.memoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property check_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.check_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““check_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.check_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property print_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.print_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““print_date””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.print_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property print_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.print_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““print_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.print_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_master.input_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_master””中列““input_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_master.input_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.billnoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbillnoNull()
            Me(Me.tablet_skys_master.billnoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmemoNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.memoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmemoNull()
            Me(Me.tablet_skys_master.memoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ischeck_manNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.check_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcheck_manNull()
            Me(Me.tablet_skys_master.check_manColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprint_dateNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.print_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprint_dateNull()
            Me(Me.tablet_skys_master.print_dateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprint_manNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.print_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprint_manNull()
            Me(Me.tablet_skys_master.print_manColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_manNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_master.input_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_manNull()
            Me(Me.tablet_skys_master.input_manColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t_skys_detailRow
        Inherits System.Data.DataRow
        
        Private tablet_skys_detail As t_skys_detailDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet_skys_detail = CType(Me.Table,t_skys_detailDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.project_noColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““project_no””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.project_noColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.project_nameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““project_name””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.project_nameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.project_moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““project_money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.project_moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property memo() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.memoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““memo””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.memoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property effective_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.effective_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““effective_date””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.effective_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_skys_detail.billnoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_skys_detail””中列““billno””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_skys_detail.billnoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_noNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.project_noColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_noNull()
            Me(Me.tablet_skys_detail.project_noColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_nameNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.project_nameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_nameNull()
            Me(Me.tablet_skys_detail.project_nameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_moneyNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.project_moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_moneyNull()
            Me(Me.tablet_skys_detail.project_moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmoneyNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmoneyNull()
            Me(Me.tablet_skys_detail.moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmemoNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.memoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmemoNull()
            Me(Me.tablet_skys_detail.memoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iseffective_dateNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.effective_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Seteffective_dateNull()
            Me(Me.tablet_skys_detail.effective_dateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tablet_skys_detail.billnoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbillnoNull()
            Me(Me.tablet_skys_detail.billnoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t_skys_masterRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As t_skys_masterRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t_skys_masterRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t_skys_masterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t_skys_detailRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As t_skys_detailRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t_skys_detailRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t_skys_detailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
