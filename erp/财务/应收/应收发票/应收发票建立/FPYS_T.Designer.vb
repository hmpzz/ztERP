'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行库版本:2.0.50727.42
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("FPYF_T"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class FPYF_T
    Inherits System.Data.DataSet
    
    Private tablet_fpys_master As t_fpys_masterDataTable
    
    Private tablet_fpys_detail As t_fpys_detailDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("t_fpys_master")) Is Nothing) Then
                MyBase.Tables.Add(New t_fpys_masterDataTable(ds.Tables("t_fpys_master")))
            End If
            If (Not (ds.Tables("t_fpys_detail")) Is Nothing) Then
                MyBase.Tables.Add(New t_fpys_detailDataTable(ds.Tables("t_fpys_detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t_fpys_master() As t_fpys_masterDataTable
        Get
            Return Me.tablet_fpys_master
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property t_fpys_detail() As t_fpys_detailDataTable
        Get
            Return Me.tablet_fpys_detail
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As FPYF_T = CType(MyBase.Clone,FPYF_T)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("t_fpys_master")) Is Nothing) Then
                MyBase.Tables.Add(New t_fpys_masterDataTable(ds.Tables("t_fpys_master")))
            End If
            If (Not (ds.Tables("t_fpys_detail")) Is Nothing) Then
                MyBase.Tables.Add(New t_fpys_detailDataTable(ds.Tables("t_fpys_detail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablet_fpys_master = CType(MyBase.Tables("t_fpys_master"),t_fpys_masterDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet_fpys_master) Is Nothing) Then
                Me.tablet_fpys_master.InitVars
            End If
        End If
        Me.tablet_fpys_detail = CType(MyBase.Tables("t_fpys_detail"),t_fpys_detailDataTable)
        If (initTable = true) Then
            If (Not (Me.tablet_fpys_detail) Is Nothing) Then
                Me.tablet_fpys_detail.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "FPYF_T"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/FPYF_T.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablet_fpys_master = New t_fpys_masterDataTable
        MyBase.Tables.Add(Me.tablet_fpys_master)
        Me.tablet_fpys_detail = New t_fpys_detailDataTable
        MyBase.Tables.Add(Me.tablet_fpys_detail)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet_fpys_master() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializet_fpys_detail() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As FPYF_T = New FPYF_T
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub t_fpys_masterRowChangeEventHandler(ByVal sender As Object, ByVal e As t_fpys_masterRowChangeEvent)
    
    Public Delegate Sub t_fpys_detailRowChangeEventHandler(ByVal sender As Object, ByVal e As t_fpys_detailRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t_fpys_masterDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnbillno As System.Data.DataColumn
        
        Private columnkp_type As System.Data.DataColumn
        
        Private columncustomer_name As System.Data.DataColumn
        
        Private columnHW_name1 As System.Data.DataColumn
        
        Private columnHW_name2 As System.Data.DataColumn
        
        Private columnHW_name3 As System.Data.DataColumn
        
        Private columnHW_name4 As System.Data.DataColumn
        
        Private columnHW_name5 As System.Data.DataColumn
        
        Private columnHW_name6 As System.Data.DataColumn
        
        Private columnHW_UNIT1 As System.Data.DataColumn
        
        Private columnHW_UNIT2 As System.Data.DataColumn
        
        Private columnHW_UNIT3 As System.Data.DataColumn
        
        Private columnHW_UNIT4 As System.Data.DataColumn
        
        Private columnHW_UNIT5 As System.Data.DataColumn
        
        Private columnHW_UNIT6 As System.Data.DataColumn
        
        Private columnHW_price1 As System.Data.DataColumn
        
        Private columnHW_price2 As System.Data.DataColumn
        
        Private columnHW_price3 As System.Data.DataColumn
        
        Private columnHW_price4 As System.Data.DataColumn
        
        Private columnHW_price5 As System.Data.DataColumn
        
        Private columnHW_price6 As System.Data.DataColumn
        
        Private columnHW_amount1 As System.Data.DataColumn
        
        Private columnHW_amount2 As System.Data.DataColumn
        
        Private columnHW_amount3 As System.Data.DataColumn
        
        Private columnHW_amount4 As System.Data.DataColumn
        
        Private columnHW_amount5 As System.Data.DataColumn
        
        Private columnHW_amount6 As System.Data.DataColumn
        
        Private columnHW_money1 As System.Data.DataColumn
        
        Private columnHW_money2 As System.Data.DataColumn
        
        Private columnHW_money3 As System.Data.DataColumn
        
        Private columnHW_money4 As System.Data.DataColumn
        
        Private columnHW_money5 As System.Data.DataColumn
        
        Private columnHW_money6 As System.Data.DataColumn
        
        Private columnat As System.Data.DataColumn
        
        Private columnnsr_no As System.Data.DataColumn
        
        Private columnkhh_no As System.Data.DataColumn
        
        Private columnHJ_amount As System.Data.DataColumn
        
        Private columnHJ_money As System.Data.DataColumn
        
        Private columninput_man As System.Data.DataColumn
        
        Private columncheck_man As System.Data.DataColumn
        
        Private columnprint_man As System.Data.DataColumn
        
        Private columnprint_date As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t_fpys_master"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property billnoColumn() As System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kp_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columnkp_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customer_nameColumn() As System.Data.DataColumn
            Get
                Return Me.columncustomer_name
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name1Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name2Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name3Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name4Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name5Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_name6Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_name6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT1Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT2Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT3Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT4Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT5Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_UNIT6Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_UNIT6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price1Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price2Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price3Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price4Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price5Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_price6Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_price6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount1Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount2Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount3Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount4Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount5Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_amount6Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_amount6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money1Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money2Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money3Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money4Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money4
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money5Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money5
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HW_money6Column() As System.Data.DataColumn
            Get
                Return Me.columnHW_money6
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property atColumn() As System.Data.DataColumn
            Get
                Return Me.columnat
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nsr_noColumn() As System.Data.DataColumn
            Get
                Return Me.columnnsr_no
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property khh_noColumn() As System.Data.DataColumn
            Get
                Return Me.columnkhh_no
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HJ_amountColumn() As System.Data.DataColumn
            Get
                Return Me.columnHJ_amount
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HJ_moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnHJ_money
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_manColumn() As System.Data.DataColumn
            Get
                Return Me.columninput_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property check_manColumn() As System.Data.DataColumn
            Get
                Return Me.columncheck_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property print_manColumn() As System.Data.DataColumn
            Get
                Return Me.columnprint_man
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property print_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columnprint_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t_fpys_masterRow
            Get
                Return CType(Me.Rows(index),t_fpys_masterRow)
            End Get
        End Property
        
        Public Event t_fpys_masterRowChanging As t_fpys_masterRowChangeEventHandler
        
        Public Event t_fpys_masterRowChanged As t_fpys_masterRowChangeEventHandler
        
        Public Event t_fpys_masterRowDeleting As t_fpys_masterRowChangeEventHandler
        
        Public Event t_fpys_masterRowDeleted As t_fpys_masterRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt_fpys_masterRow(ByVal row As t_fpys_masterRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt_fpys_masterRow( _
                    ByVal billno As String,  _
                    ByVal kp_type As String,  _
                    ByVal customer_name As String,  _
                    ByVal HW_name1 As String,  _
                    ByVal HW_name2 As String,  _
                    ByVal HW_name3 As String,  _
                    ByVal HW_name4 As String,  _
                    ByVal HW_name5 As String,  _
                    ByVal HW_name6 As String,  _
                    ByVal HW_UNIT1 As String,  _
                    ByVal HW_UNIT2 As String,  _
                    ByVal HW_UNIT3 As String,  _
                    ByVal HW_UNIT4 As String,  _
                    ByVal HW_UNIT5 As String,  _
                    ByVal HW_UNIT6 As String,  _
                    ByVal HW_price1 As Decimal,  _
                    ByVal HW_price2 As Decimal,  _
                    ByVal HW_price3 As Decimal,  _
                    ByVal HW_price4 As Decimal,  _
                    ByVal HW_price5 As Decimal,  _
                    ByVal HW_price6 As Decimal,  _
                    ByVal HW_amount1 As Decimal,  _
                    ByVal HW_amount2 As Decimal,  _
                    ByVal HW_amount3 As Decimal,  _
                    ByVal HW_amount4 As Decimal,  _
                    ByVal HW_amount5 As Decimal,  _
                    ByVal HW_amount6 As Decimal,  _
                    ByVal HW_money1 As Decimal,  _
                    ByVal HW_money2 As Decimal,  _
                    ByVal HW_money3 As Decimal,  _
                    ByVal HW_money4 As Decimal,  _
                    ByVal HW_money5 As Decimal,  _
                    ByVal HW_money6 As Decimal,  _
                    ByVal at As String,  _
                    ByVal nsr_no As String,  _
                    ByVal khh_no As String,  _
                    ByVal HJ_amount As Decimal,  _
                    ByVal HJ_money As Decimal,  _
                    ByVal input_man As String,  _
                    ByVal check_man As String,  _
                    ByVal print_man As String,  _
                    ByVal print_date As Date) As t_fpys_masterRow
            Dim rowt_fpys_masterRow As t_fpys_masterRow = CType(Me.NewRow,t_fpys_masterRow)
            rowt_fpys_masterRow.ItemArray = New Object() {billno, kp_type, customer_name, HW_name1, HW_name2, HW_name3, HW_name4, HW_name5, HW_name6, HW_UNIT1, HW_UNIT2, HW_UNIT3, HW_UNIT4, HW_UNIT5, HW_UNIT6, HW_price1, HW_price2, HW_price3, HW_price4, HW_price5, HW_price6, HW_amount1, HW_amount2, HW_amount3, HW_amount4, HW_amount5, HW_amount6, HW_money1, HW_money2, HW_money3, HW_money4, HW_money5, HW_money6, at, nsr_no, khh_no, HJ_amount, HJ_money, input_man, check_man, print_man, print_date}
            Me.Rows.Add(rowt_fpys_masterRow)
            Return rowt_fpys_masterRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As t_fpys_masterDataTable = CType(MyBase.Clone,t_fpys_masterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New t_fpys_masterDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnkp_type = MyBase.Columns("kp_type")
            Me.columncustomer_name = MyBase.Columns("customer_name")
            Me.columnHW_name1 = MyBase.Columns("HW_name1")
            Me.columnHW_name2 = MyBase.Columns("HW_name2")
            Me.columnHW_name3 = MyBase.Columns("HW_name3")
            Me.columnHW_name4 = MyBase.Columns("HW_name4")
            Me.columnHW_name5 = MyBase.Columns("HW_name5")
            Me.columnHW_name6 = MyBase.Columns("HW_name6")
            Me.columnHW_UNIT1 = MyBase.Columns("HW_UNIT1")
            Me.columnHW_UNIT2 = MyBase.Columns("HW_UNIT2")
            Me.columnHW_UNIT3 = MyBase.Columns("HW_UNIT3")
            Me.columnHW_UNIT4 = MyBase.Columns("HW_UNIT4")
            Me.columnHW_UNIT5 = MyBase.Columns("HW_UNIT5")
            Me.columnHW_UNIT6 = MyBase.Columns("HW_UNIT6")
            Me.columnHW_price1 = MyBase.Columns("HW_price1")
            Me.columnHW_price2 = MyBase.Columns("HW_price2")
            Me.columnHW_price3 = MyBase.Columns("HW_price3")
            Me.columnHW_price4 = MyBase.Columns("HW_price4")
            Me.columnHW_price5 = MyBase.Columns("HW_price5")
            Me.columnHW_price6 = MyBase.Columns("HW_price6")
            Me.columnHW_amount1 = MyBase.Columns("HW_amount1")
            Me.columnHW_amount2 = MyBase.Columns("HW_amount2")
            Me.columnHW_amount3 = MyBase.Columns("HW_amount3")
            Me.columnHW_amount4 = MyBase.Columns("HW_amount4")
            Me.columnHW_amount5 = MyBase.Columns("HW_amount5")
            Me.columnHW_amount6 = MyBase.Columns("HW_amount6")
            Me.columnHW_money1 = MyBase.Columns("HW_money1")
            Me.columnHW_money2 = MyBase.Columns("HW_money2")
            Me.columnHW_money3 = MyBase.Columns("HW_money3")
            Me.columnHW_money4 = MyBase.Columns("HW_money4")
            Me.columnHW_money5 = MyBase.Columns("HW_money5")
            Me.columnHW_money6 = MyBase.Columns("HW_money6")
            Me.columnat = MyBase.Columns("at")
            Me.columnnsr_no = MyBase.Columns("nsr_no")
            Me.columnkhh_no = MyBase.Columns("khh_no")
            Me.columnHJ_amount = MyBase.Columns("HJ_amount")
            Me.columnHJ_money = MyBase.Columns("HJ_money")
            Me.columninput_man = MyBase.Columns("input_man")
            Me.columncheck_man = MyBase.Columns("check_man")
            Me.columnprint_man = MyBase.Columns("print_man")
            Me.columnprint_date = MyBase.Columns("print_date")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnbillno = New System.Data.DataColumn("billno", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnkp_type = New System.Data.DataColumn("kp_type", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkp_type)
            Me.columncustomer_name = New System.Data.DataColumn("customer_name", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_name)
            Me.columnHW_name1 = New System.Data.DataColumn("HW_name1", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name1)
            Me.columnHW_name2 = New System.Data.DataColumn("HW_name2", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name2)
            Me.columnHW_name3 = New System.Data.DataColumn("HW_name3", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name3)
            Me.columnHW_name4 = New System.Data.DataColumn("HW_name4", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name4)
            Me.columnHW_name5 = New System.Data.DataColumn("HW_name5", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name5)
            Me.columnHW_name6 = New System.Data.DataColumn("HW_name6", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_name6)
            Me.columnHW_UNIT1 = New System.Data.DataColumn("HW_UNIT1", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT1)
            Me.columnHW_UNIT2 = New System.Data.DataColumn("HW_UNIT2", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT2)
            Me.columnHW_UNIT3 = New System.Data.DataColumn("HW_UNIT3", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT3)
            Me.columnHW_UNIT4 = New System.Data.DataColumn("HW_UNIT4", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT4)
            Me.columnHW_UNIT5 = New System.Data.DataColumn("HW_UNIT5", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT5)
            Me.columnHW_UNIT6 = New System.Data.DataColumn("HW_UNIT6", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_UNIT6)
            Me.columnHW_price1 = New System.Data.DataColumn("HW_price1", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price1)
            Me.columnHW_price2 = New System.Data.DataColumn("HW_price2", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price2)
            Me.columnHW_price3 = New System.Data.DataColumn("HW_price3", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price3)
            Me.columnHW_price4 = New System.Data.DataColumn("HW_price4", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price4)
            Me.columnHW_price5 = New System.Data.DataColumn("HW_price5", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price5)
            Me.columnHW_price6 = New System.Data.DataColumn("HW_price6", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_price6)
            Me.columnHW_amount1 = New System.Data.DataColumn("HW_amount1", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount1)
            Me.columnHW_amount2 = New System.Data.DataColumn("HW_amount2", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount2)
            Me.columnHW_amount3 = New System.Data.DataColumn("HW_amount3", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount3)
            Me.columnHW_amount4 = New System.Data.DataColumn("HW_amount4", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount4)
            Me.columnHW_amount5 = New System.Data.DataColumn("HW_amount5", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount5)
            Me.columnHW_amount6 = New System.Data.DataColumn("HW_amount6", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_amount6)
            Me.columnHW_money1 = New System.Data.DataColumn("HW_money1", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money1)
            Me.columnHW_money2 = New System.Data.DataColumn("HW_money2", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money2)
            Me.columnHW_money3 = New System.Data.DataColumn("HW_money3", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money3)
            Me.columnHW_money4 = New System.Data.DataColumn("HW_money4", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money4)
            Me.columnHW_money5 = New System.Data.DataColumn("HW_money5", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money5)
            Me.columnHW_money6 = New System.Data.DataColumn("HW_money6", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHW_money6)
            Me.columnat = New System.Data.DataColumn("at", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnat)
            Me.columnnsr_no = New System.Data.DataColumn("nsr_no", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnsr_no)
            Me.columnkhh_no = New System.Data.DataColumn("khh_no", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkhh_no)
            Me.columnHJ_amount = New System.Data.DataColumn("HJ_amount", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHJ_amount)
            Me.columnHJ_money = New System.Data.DataColumn("HJ_money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHJ_money)
            Me.columninput_man = New System.Data.DataColumn("input_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_man)
            Me.columncheck_man = New System.Data.DataColumn("check_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncheck_man)
            Me.columnprint_man = New System.Data.DataColumn("print_man", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprint_man)
            Me.columnprint_date = New System.Data.DataColumn("print_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprint_date)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt_fpys_masterRow() As t_fpys_masterRow
            Return CType(Me.NewRow,t_fpys_masterRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New t_fpys_masterRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(t_fpys_masterRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t_fpys_masterRowChangedEvent) Is Nothing) Then
                RaiseEvent t_fpys_masterRowChanged(Me, New t_fpys_masterRowChangeEvent(CType(e.Row,t_fpys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t_fpys_masterRowChangingEvent) Is Nothing) Then
                RaiseEvent t_fpys_masterRowChanging(Me, New t_fpys_masterRowChangeEvent(CType(e.Row,t_fpys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t_fpys_masterRowDeletedEvent) Is Nothing) Then
                RaiseEvent t_fpys_masterRowDeleted(Me, New t_fpys_masterRowChangeEvent(CType(e.Row,t_fpys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t_fpys_masterRowDeletingEvent) Is Nothing) Then
                RaiseEvent t_fpys_masterRowDeleting(Me, New t_fpys_masterRowChangeEvent(CType(e.Row,t_fpys_masterRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet_fpys_masterRow(ByVal row As t_fpys_masterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As FPYF_T = New FPYF_T
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t_fpys_masterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class t_fpys_detailDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnbillno As System.Data.DataColumn
        
        Private columnproject_no As System.Data.DataColumn
        
        Private columnproject_name As System.Data.DataColumn
        
        Private columnmoney As System.Data.DataColumn
        
        Private columnfp_money As System.Data.DataColumn
        
        Private columnproject_money As System.Data.DataColumn
        
        Private columnwkp_money As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "t_fpys_detail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property billnoColumn() As System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_noColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_no
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_nameColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_name
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnmoney
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fp_moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnfp_money
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property project_moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnproject_money
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wkp_moneyColumn() As System.Data.DataColumn
            Get
                Return Me.columnwkp_money
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As t_fpys_detailRow
            Get
                Return CType(Me.Rows(index),t_fpys_detailRow)
            End Get
        End Property
        
        Public Event t_fpys_detailRowChanging As t_fpys_detailRowChangeEventHandler
        
        Public Event t_fpys_detailRowChanged As t_fpys_detailRowChangeEventHandler
        
        Public Event t_fpys_detailRowDeleting As t_fpys_detailRowChangeEventHandler
        
        Public Event t_fpys_detailRowDeleted As t_fpys_detailRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addt_fpys_detailRow(ByVal row As t_fpys_detailRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addt_fpys_detailRow(ByVal billno As String, ByVal project_no As String, ByVal project_name As String, ByVal money As Decimal, ByVal fp_money As Decimal, ByVal project_money As Decimal, ByVal wkp_money As Decimal) As t_fpys_detailRow
            Dim rowt_fpys_detailRow As t_fpys_detailRow = CType(Me.NewRow,t_fpys_detailRow)
            rowt_fpys_detailRow.ItemArray = New Object() {billno, project_no, project_name, money, fp_money, project_money, wkp_money}
            Me.Rows.Add(rowt_fpys_detailRow)
            Return rowt_fpys_detailRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As t_fpys_detailDataTable = CType(MyBase.Clone,t_fpys_detailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New t_fpys_detailDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnproject_no = MyBase.Columns("project_no")
            Me.columnproject_name = MyBase.Columns("project_name")
            Me.columnmoney = MyBase.Columns("money")
            Me.columnfp_money = MyBase.Columns("fp_money")
            Me.columnproject_money = MyBase.Columns("project_money")
            Me.columnwkp_money = MyBase.Columns("wkp_money")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnbillno = New System.Data.DataColumn("billno", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnproject_no = New System.Data.DataColumn("project_no", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_no)
            Me.columnproject_name = New System.Data.DataColumn("project_name", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_name)
            Me.columnmoney = New System.Data.DataColumn("money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoney)
            Me.columnfp_money = New System.Data.DataColumn("fp_money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfp_money)
            Me.columnproject_money = New System.Data.DataColumn("project_money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_money)
            Me.columnwkp_money = New System.Data.DataColumn("wkp_money", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwkp_money)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newt_fpys_detailRow() As t_fpys_detailRow
            Return CType(Me.NewRow,t_fpys_detailRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New t_fpys_detailRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(t_fpys_detailRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.t_fpys_detailRowChangedEvent) Is Nothing) Then
                RaiseEvent t_fpys_detailRowChanged(Me, New t_fpys_detailRowChangeEvent(CType(e.Row,t_fpys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.t_fpys_detailRowChangingEvent) Is Nothing) Then
                RaiseEvent t_fpys_detailRowChanging(Me, New t_fpys_detailRowChangeEvent(CType(e.Row,t_fpys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.t_fpys_detailRowDeletedEvent) Is Nothing) Then
                RaiseEvent t_fpys_detailRowDeleted(Me, New t_fpys_detailRowChangeEvent(CType(e.Row,t_fpys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.t_fpys_detailRowDeletingEvent) Is Nothing) Then
                RaiseEvent t_fpys_detailRowDeleting(Me, New t_fpys_detailRowChangeEvent(CType(e.Row,t_fpys_detailRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removet_fpys_detailRow(ByVal row As t_fpys_detailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As FPYF_T = New FPYF_T
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "t_fpys_detailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t_fpys_masterRow
        Inherits System.Data.DataRow
        
        Private tablet_fpys_master As t_fpys_masterDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet_fpys_master = CType(Me.Table,t_fpys_masterDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.billnoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““billno””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.billnoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kp_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.kp_typeColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““kp_type””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.kp_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.customer_nameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““customer_name””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.customer_nameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name1() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name1Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name1””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name2() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name2Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name2””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name3() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name3Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name3””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name4() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name4Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name4””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name5() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name5Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name5””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_name6() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_name6Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_name6””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_name6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT1() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT1Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT1””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT2() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT2Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT2””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT3() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT3Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT3””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT4() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT4Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT4””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT5() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT5Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT5””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_UNIT6() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_UNIT6Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_UNIT6””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_UNIT6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price1Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price1””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price2Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price2””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price3Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price3””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price4Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price4””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price5Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price5””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_price6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_price6Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_price6””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_price6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount1Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount1””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount2Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount2””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount3Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount3””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount4Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount4””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount5Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount5””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_amount6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_amount6Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_amount6””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_amount6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money1Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money1””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money2Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money2””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money3Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money3””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money4Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money4””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money4Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money5Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money5””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money5Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HW_money6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HW_money6Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HW_money6””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HW_money6Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property at() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.atColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““at””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.atColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nsr_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.nsr_noColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““nsr_no””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.nsr_noColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property khh_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.khh_noColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““khh_no””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.khh_noColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HJ_amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HJ_amountColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HJ_amount””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HJ_amountColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HJ_money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.HJ_moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““HJ_money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.HJ_moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.input_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““input_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.input_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property check_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.check_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““check_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.check_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property print_man() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.print_manColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““print_man””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.print_manColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property print_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_master.print_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_master””中列““print_date””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_master.print_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.billnoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbillnoNull()
            Me(Me.tablet_fpys_master.billnoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskp_typeNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.kp_typeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkp_typeNull()
            Me(Me.tablet_fpys_master.kp_typeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomer_nameNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.customer_nameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomer_nameNull()
            Me(Me.tablet_fpys_master.customer_nameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name1Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name1Null()
            Me(Me.tablet_fpys_master.HW_name1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name2Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name2Null()
            Me(Me.tablet_fpys_master.HW_name2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name3Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name3Null()
            Me(Me.tablet_fpys_master.HW_name3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name4Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name4Null()
            Me(Me.tablet_fpys_master.HW_name4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name5Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name5Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name5Null()
            Me(Me.tablet_fpys_master.HW_name5Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_name6Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_name6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_name6Null()
            Me(Me.tablet_fpys_master.HW_name6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT1Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT1Null()
            Me(Me.tablet_fpys_master.HW_UNIT1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT2Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT2Null()
            Me(Me.tablet_fpys_master.HW_UNIT2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT3Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT3Null()
            Me(Me.tablet_fpys_master.HW_UNIT3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT4Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT4Null()
            Me(Me.tablet_fpys_master.HW_UNIT4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT5Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT5Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT5Null()
            Me(Me.tablet_fpys_master.HW_UNIT5Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_UNIT6Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_UNIT6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_UNIT6Null()
            Me(Me.tablet_fpys_master.HW_UNIT6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price1Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price1Null()
            Me(Me.tablet_fpys_master.HW_price1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price2Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price2Null()
            Me(Me.tablet_fpys_master.HW_price2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price3Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price3Null()
            Me(Me.tablet_fpys_master.HW_price3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price4Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price4Null()
            Me(Me.tablet_fpys_master.HW_price4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price5Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price5Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price5Null()
            Me(Me.tablet_fpys_master.HW_price5Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_price6Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_price6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_price6Null()
            Me(Me.tablet_fpys_master.HW_price6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount1Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount1Null()
            Me(Me.tablet_fpys_master.HW_amount1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount2Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount2Null()
            Me(Me.tablet_fpys_master.HW_amount2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount3Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount3Null()
            Me(Me.tablet_fpys_master.HW_amount3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount4Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount4Null()
            Me(Me.tablet_fpys_master.HW_amount4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount5Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount5Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount5Null()
            Me(Me.tablet_fpys_master.HW_amount5Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_amount6Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_amount6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_amount6Null()
            Me(Me.tablet_fpys_master.HW_amount6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money1Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money1Null()
            Me(Me.tablet_fpys_master.HW_money1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money2Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money2Null()
            Me(Me.tablet_fpys_master.HW_money2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money3Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money3Null()
            Me(Me.tablet_fpys_master.HW_money3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money4Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money4Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money4Null()
            Me(Me.tablet_fpys_master.HW_money4Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money5Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money5Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money5Null()
            Me(Me.tablet_fpys_master.HW_money5Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHW_money6Null() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HW_money6Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHW_money6Null()
            Me(Me.tablet_fpys_master.HW_money6Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsatNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.atColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetatNull()
            Me(Me.tablet_fpys_master.atColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnsr_noNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.nsr_noColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnsr_noNull()
            Me(Me.tablet_fpys_master.nsr_noColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskhh_noNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.khh_noColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkhh_noNull()
            Me(Me.tablet_fpys_master.khh_noColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHJ_amountNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HJ_amountColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHJ_amountNull()
            Me(Me.tablet_fpys_master.HJ_amountColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHJ_moneyNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.HJ_moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHJ_moneyNull()
            Me(Me.tablet_fpys_master.HJ_moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_manNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.input_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_manNull()
            Me(Me.tablet_fpys_master.input_manColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ischeck_manNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.check_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcheck_manNull()
            Me(Me.tablet_fpys_master.check_manColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprint_manNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.print_manColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprint_manNull()
            Me(Me.tablet_fpys_master.print_manColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprint_dateNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_master.print_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprint_dateNull()
            Me(Me.tablet_fpys_master.print_dateColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class t_fpys_detailRow
        Inherits System.Data.DataRow
        
        Private tablet_fpys_detail As t_fpys_detailDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablet_fpys_detail = CType(Me.Table,t_fpys_detailDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.billnoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““billno””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.billnoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.project_noColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““project_no””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.project_noColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.project_nameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““project_name””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.project_nameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fp_money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.fp_moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““fp_money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.fp_moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property project_money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.project_moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““project_money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.project_moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wkp_money() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablet_fpys_detail.wkp_moneyColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("表““t_fpys_detail””中列““wkp_money””的值为 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tablet_fpys_detail.wkp_moneyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.billnoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbillnoNull()
            Me(Me.tablet_fpys_detail.billnoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_noNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.project_noColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_noNull()
            Me(Me.tablet_fpys_detail.project_noColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_nameNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.project_nameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_nameNull()
            Me(Me.tablet_fpys_detail.project_nameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmoneyNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmoneyNull()
            Me(Me.tablet_fpys_detail.moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfp_moneyNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.fp_moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfp_moneyNull()
            Me(Me.tablet_fpys_detail.fp_moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproject_moneyNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.project_moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproject_moneyNull()
            Me(Me.tablet_fpys_detail.project_moneyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswkp_moneyNull() As Boolean
            Return Me.IsNull(Me.tablet_fpys_detail.wkp_moneyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwkp_moneyNull()
            Me(Me.tablet_fpys_detail.wkp_moneyColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t_fpys_masterRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As t_fpys_masterRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t_fpys_masterRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t_fpys_masterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class t_fpys_detailRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As t_fpys_detailRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As t_fpys_detailRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As t_fpys_detailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
